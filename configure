#!/bin/sh
# ===========================================================================
# Configure script generated by grace-configure (revision 1.0.7)
# ===========================================================================

# ---------------------------------------------------------------------------
# Solaris' /bin/sh uses a braindead builtin echo, circumvent
# ---------------------------------------------------------------------------
TEST=`echo -n ""`
if [ -z "$TEST" ]; then
  ECHON="echo -n"
  NNL=""
else
  ECHON="echo"
  NNL="\c"
fi

# ---------------------------------------------------------------------------
# Useful functions for command line argument parsing
# ---------------------------------------------------------------------------
usage ()
{
  S=`echo "$0" | sed -e "s/./ /g"`
  cat << EOF
Usage: $0 [--quiet]             Quiet mode [-q]
       $S [--prefix p]          Set root install-prefix
       $S [--exec-prefix p]     Set executable install-prefix
       $S [--lib-prefix p]      Set library install-prefix
       $S [--conf-prefix p]     Set configuration install-prefix
       $S [--include-prefix p]  Set include-files install-prefix
       $S [--homedir]           Set up for instalation in homedir.
EOF
  exit 1
}
QUIET=0

# Checks for an option that is defined as --foo=bar. Returns 1 if so, or
# 0 if not. Caller can use this to shift in cases of "--foo bar".
parseopt() {
  withvalue=`echo "$1" | sed -e "s/.*=.*//"`
  if [ ! -z "$withvalue" ]; then
    return 0
  fi
  return 1
}

# Part two of the "--foo bar" eq "--foo=bar" trick: Use sed to strip the
# --foo= off the second variation. In either case we'll end up with "bar".
parsearg() {
	# we need to replace ${prefix} with ${CONFIG_INSTALLROOT} because 
	# dpkg-buidpackage relies on some autoconf internals there
	echo "$2" | sed -e "s/--${1}=//" | sed -e 's/\${prefix}/\${CONFIG_INSTALLROOT}/'
}

# Determine whether we're logged in as root.
isroot() {
	uid=`id | sed -e "s/^uid=//;s/ .*//;s/(.*//"`
	if [ "$uid" = "0" ]; then
	  return 0
	fi
	return 1
}

# Combine two paths.
makepath() {
	echo "${1}${2}" | sed -e "s@//@/@g;s@/\./@/.@g"
}

# ---------------------------------------------------------------------------
# Set up sensible defaults for the installation paths
# ---------------------------------------------------------------------------
INOPT_INSTALLROOT="/usr/local/"

INOPT_INCLUDEPATH="include"
INOPT_BINPATH="bin"
INOPT_CONFPATH="etc/conf"

INOPT_LIBPATH="lib"
QUIET=0

# ---------------------------------------------------------------------------
# Parse the command line arguments
# ---------------------------------------------------------------------------
MOREOPTS="yes"
while [ ! -z "$MOREOPTS" ]; do
	case "$1" in
		-h)
			usage
			;;
		--help)
			usage
			;;
		-q)
			QUIET=1
			;;
		--prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_INSTALLROOT=`parsearg prefix "$1"`
			CONFIG_INSTALLROOT=`echo "${CONFIG_INSTALLROOT}/" | sed -e "s@//@@g"`
			CONFIG_BINPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_BINPATH"`
			CONFIG_LIBPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_LIBPATH"`
			CONFIG_CONFPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_CONFPATH"`
			;;
		--exec-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_BINPATH=`parsearg exec-prefix "$1"`
			;;
		--lib-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_LIBPATH=`parsearg lib-prefix "$1"`
			;;
		--conf-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_CONFPATH=`parsearg conf-prefix "$1"`
			;;
		--sysconfdir*) # For gnu automake compatibility
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_CONFPATH=`parsearg sysconfdir "$1"`
			;;
		--include-prefix*)
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_INCLUDEPATH=`parsearg include-prefix "$1"`
			;;
		--includedir*)
			 # For gnu automake compatibility
			if parseopt "$1" "$2"; then shift; fi
			CONFIG_INCLUDEPATH=`parsearg includedir "$1"`
			;;
		--mandir*|--infodir*|--localstatedir*|--libexecdir*|--disable-maintainer-mode|--disable-dependency-tracking|--build*)
			# Ignored. Just for gnu automake compatibility
			;;
		--quiet)
			QUIET=1
			;;
		--homedir)
		   if [ -d "$HOME/.lib" ]; then
			 INOPT_INSTALLROOT="$HOME/."
		   elif [ -d "$HOME/Library/Preferences" ]; then
			 INOPT_INSTALLROOT="$HOME/"
		   else
			 INOPT_INSTALLROOT="$HOME/"
		   fi
		   ;;		
		--)
			MOREOPTS=""
			;;
		--*)
			arg=`echo "$1" | cut -f1 -d=`
			echo "Unknown option: $arg" >&2
			exit 1
			;;
		*)
			MOREOPTS=""
			;;
	esac
	if [ ! -z "$MOREOPTS" ]; then shift; fi
done

if [ ! -d "${INOPT_INSTALLROOT}${INOPT_CONFPATH}" ]; then
  if [ -d "${INOPT_INSTALLROOT}conf" ]; then
    INOPT_CONFPATH="conf"
  elif [ -d "${INOPT_INSTALLROOT}Library/Preferences" ]; then
    INOPT_CONFPATH="Library/Preferences"
  fi
fi

# ---------------------------------------------------------------------------
# Merge values from command line to the actual defaults
# ---------------------------------------------------------------------------
if [ -z "$CONFIG_INSTALLROOT" ]; then
	CONFIG_INSTALLROOT="$INOPT_INSTALLROOT"
fi

if [ -z "$CONFIG_BINPATH" ]; then
  CONFIG_BINPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_BINPATH"`
fi

if [ -z "$CONFIG_LIBPATH" ]; then
	CONFIG_LIBPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_LIBPATH"`
fi

if [ -z "$CONFIG_CONFPATH" ]; then
	CONFIG_CONFPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_CONFPATH"`
fi

if [ -z "$CONFIG_INCLUDEPATH" ]; then
	CONFIG_INCLUDEPATH=`makepath "$CONFIG_INSTALLROOT" "$INOPT_INCLUDEPATH"`
fi

# ---------------------------------------------------------------------------
# Create the configure.paths file
# ---------------------------------------------------------------------------
cat > configure.paths << _EOF_
CONFIG_INSTALLROOT="${CONFIG_INSTALLROOT}"
CONFIG_BINPATH="${CONFIG_BINPATH}"
CONFIG_LIBPATH="${CONFIG_LIBPATH}"
CONFIG_CONFPATH="${CONFIG_CONFPATH}"
CONFIG_INCLUDEPATH="${CONFIG_INCLUDEPATH}"
_EOF_

# Display paths if our pie-hole is not closed administratively.
if [ $QUIET = 0 ]; then cat configure.paths; fi

# ---------------------------------------------------------------------------
# Provide a bunch of useful tools to our snippets
# ---------------------------------------------------------------------------
saypending ()
{
  if [ $QUIET = 1 ]; then
    PENDING=$1
  else
    $ECHON "$1: $NNL"
  fi
}

saypass ()
{
  if [ $QUIET = 1 ]; then
    : # nothing
  else
    echo "$1"
  fi
}

sayfail ()
{
  if [ $QUIET = 1 ]; then
    echo "$PENDING: $1" >&2
    exit 1
  else
    echo "$1"
    exit 1
  fi
}

sayfailsoft ()
{
  if [ $QUIET = 1 ]; then
    echo "$PENDING: $1" >&2
  else
    echo "$1"
  fi
}

echowarn ()
{
	if [ $QUIET = 1 ]; then
	  :
	else
	  echo "$1"
	fi
}
# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C compiler on board
# ---------------------------------------------------------------------------

saypending "looking for c compiler"

if [ ! -z "$CC" ]; then
  CC=`which $CC 2>/dev/null`
fi
if [ -z "$CC" ]; then
  CC=`which cc 2>/dev/null`
fi

if [ -f "$CC" ]; then
  actually_gcc=`$CC -v 2>&1 | egrep "gcc|clang" | sed -e "s/^(gcc|clang)/Y/"`

  cat >conftest.c <<_eof_
#include <stdio.h>
int main(int argc, char *argv[]) {
  printf ("hello, nurse\n");
}
_eof_

  $CC -o conftest.bin conftest.c >/dev/null 2>&1 || actually_gcc="YES"
  rm -f conftest.c conftest.bin >/dev/null 2>&1
  if [ ! -z "$actually_gcc" ]; then
    CC=""
  fi
fi

DYNEXT="so"

if [ -f "$CC" ]; then
  saypass "$CC"
  CFLAGS="-n32 -O"
  SHARED="-shared"
  LD="$CC"
  LDSHARED="$CC -shared"
  LDFLAGS=""
else
  CC=`which gcc`
  if [ -f "$CC" ]; then
    saypass "$CC"
    CFLAGS=${CFLAGS}
    un=`uname`
    if [ "$un" = "Darwin" ]; then
      SHARED="-fno-common"
      LDSHARED="$CC $LDFLAGS -dynamiclib -undefined dynamic_lookup"
      DYNEXT="dylib"
    else
      SHARED="-shared -fPIC"
      LDSHARED="\$(COMPILER) -shared \$(LDFLAGS)"
    fi
    LD="$CC"
    LDFLAGS=""
  else
    sayfail "fail"
    CC=""
    exit 1;
  fi
fi

COMPILER=$CC
COMPILERFLAGS=$CFLAGS
# ---------------------------------------------------------------------------
# Figure out path to libcurl include
# ---------------------------------------------------------------------------

saypending "looking for curl.h include"
for loc in /sw/include /usr/local/include /usr/include $HOME/include \
           /sw/include/pcre /opt/local/include /usr/local/include/pcre /usr/include/pcre $HOME/include/pcre; do
  if [ -f "$loc/curl/curl.h" ]; then
    CURLINC="$loc"
  fi
done
if [ -z "$CURLINC" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$CURLINC"

# ---------------------------------------------------------------------------
# Figure out path to libcurl library
# ---------------------------------------------------------------------------

saypending "looking for curl library"
echo 'int main(){}' > conftest.c
$CC -o conftest.bin conftest.c -lcurl >/dev/null 2>&1 && LIBCURL="-lcurl"
rm -f conftest.bin conftest.c 

if [ -z "$LIBCURL" ]; then
  for loc in /sw/lib /usr/lib32 /usr/lib /opt/local/lib /usr/local/lib /usr/freeware/lib /usr/X11R6/lib /lib64 /usr/lib64 /usr/local/lib64 $HOME/lib; do
    if [ -f "$loc/libmicrohttpd.$DYNEXT" ]; then
      LIBCURL="-L$loc -lcurl"
    fi
  done
fi
if [ -z "$LIBCURL" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$LIBCURL"

# ---------------------------------------------------------------------------
# Figure out path to libmicrohttpd include
# ---------------------------------------------------------------------------

saypending "looking for microhttpd.h include"
for loc in /sw/include /usr/local/include /usr/include $HOME/include \
           /sw/include/pcre /opt/local/include /usr/local/include/pcre /usr/include/pcre $HOME/include/pcre; do
  if [ -f "$loc/microhttpd.h" ]; then
    MICROHTTPDINC="$loc"
  fi
done
if [ -z "$MICROHTTPDINC" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$MICROHTTPDINC"

# ---------------------------------------------------------------------------
# Figure out path to libmicrohttpd library
# ---------------------------------------------------------------------------

saypending "looking for microhttpd library"
echo 'int main(){}' > conftest.c
$CC -o conftest.bin conftest.c -lmicrohttpd >/dev/null 2>&1 && LIBMICROHTTPD="-lmicrohttpd"
rm -f conftest.bin conftest.c

if [ -z "$LIBMICROHTTPD" ]; then
  for loc in /sw/lib /usr/lib32 /usr/lib /opt/local/lib /usr/local/lib /usr/freeware/lib /usr/X11R6/lib /lib64 /usr/lib64 /usr/local/lib64 $HOME/lib; do
    if [ -f "$loc/libmicrohttpd.$DYNEXT" ]; then
      LIBMICROHTTPD="-L$loc -lmicrohttpd"
    fi
  done
fi
if [ -z "$LIBMICROHTTPD" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$LIBMICROHTTPD"

# ---------------------------------------------------------------------------
# Check for libpthread functionality
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <pthread.h>
#include <stdio.h>

int main (int argc, char *argv[])
{
	pthread_attr_t attr;
	pthread_mutexattr_t mattr;
	pthread_t thr;
	
	pthread_attr_init (&attr);
	pthread_mutexattr_init (&mattr);
	
	pthread_create (&thr, NULL, NULL, NULL);
	return 1;
}
EOF

saypending "checking for pthread support"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBPTHREAD=""
  saypass "yes"
else
  if $COMPILER $COMPILERFLAGS -o conftest conftest.c -lpthread >>configure.log 2>&1; then
    LIBPTHREAD="-lpthread"
	saypass "-lpthread"
  elif $COMPILER $COMPILERFLAGS -o conftest conftest.c -lc_r >>configure.log 2>&1; then
    LIBPTHREAD="-lc_r"
    saypass "-lc_r"
  else
    sayfail "no - This application needs a working pthreads implementation."
  fi
fi

saypending "checking for ctime_r"
cat > conftest.c << EOF
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "time.h"
else
  cat > conftest.c << EOF
#define _POSIX_C_SOURCE 199506L
#define _POSIX_PTHREAD_SEMANTICS 1
#define _XOPEN_SOURCE 1
#define __EXTENSIONS__ 1
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
  if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
    saypass "time.h with solaris twist"
    CTIME_R_INCLUDE="#include <pthread.h>"
    CTIME_R_PTHREAD_DEFINE="#define _POSIX_PTHREAD_SEMANTICS 1"
    CTIME_R_XOPEN_DEFINE="#define _XOPEN_SOURCE 1"
    CTIME_R_XPG_DEFINE="#define __EXTENSIONS__ 1"
    CTIME_R_DEFINE="#define _POSIX_C_SOURCE 199506L"
  else
    sayfail "screwed"
  fi
fi

saypending "checking for pthread_rwlock_t"
cat > conftest.c << EOF
#include <pthread.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	pthread_rwlock_trywrlock (rwlock);
	return 0;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "yes"
  PTHREAD_HAVE_RWLOCK="#define PTHREAD_HAVE_RWLOCK 1"
  saypending "checking for pthread_rwlock_timedwrlock"
  cat > conftest.c << EOF
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	struct timespec ts;
	pthread_rwlock_timedwrlock (rwlock, &ts);
	return 0;
}
EOF
  if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
    saypass "yes"
    PTHREAD_HAVE_TIMEDLOCK="#define PTHREAD_HAVE_TIMEDLOCK 1"
  else
    saypass "no"
    PTHREAD_HAVE_TIMEDLOCK=""
  fi
else
  saypass "no"
  PTHREAD_HAVE_RWLOCK=""
  PTHREAD_HAVE_TIMEDLOCK=""
fi


rm -f conftest conftest.o conftest.c
# ---------------------------------------------------------------------------
# Figure out whether we need libm
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <math.h>

int main (int argc, char *argv[])
{
	double test = sqrt (3.141592653589793236);
    return 1;
}
EOF

saypending "checking whether sqrt needs -lm"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBM=""
  saypass "no"
else
  LIBM="-lm"
  saypass "yes"
fi

rm -f conftest.c conftest

# ---------------------------------------------------------------------------
# Create the makeinclude file
# ---------------------------------------------------------------------------

saypending "creating makeinclude"

DATE=`date`

cat >makeinclude <<EOF
# Makeinclude generated by configure: $DATE

CC = $CC
CFLAGS = $CFLAGS
DYNEXT = $DYNEXT
INCLUDES = -I$CURLINC -I$MICROHTTPDINC
INCLUDES_CURL = -I$CURLINC
INCLUDES_MICROHTTPD = -I$MICROHTTPDINC
LD = $LD
LDFLAGS = $LDFLAGS
LDSHARED = $LDSHARED
LIBCURL = $LIBCURL
LIBMICROHTTPD = $LIBMICROHTTPD
LIBS = $LIBCURL $LIBMICROHTTPD $LIBPTHREAD $LIBM
LPTHREAD = $LIBPTHREAD
SHARED = $SHARED
EOF

saypass "done"
# ---------------------------------------------------------------------------
# Create the platform.h file
# ---------------------------------------------------------------------------

saypending "creating platform.h"

cat >platform.h <<EOF
#ifndef _PLATFORM_H
#define _PLATFORM_H
$CTIME_R_DEFINE
$CTIME_R_PTHREAD_DEFINE
$CTIME_R_XOPEN_DEFINE
$CTIME_R_XPG_DEFINE
$CTIME_R_INCLUDE
$PTHREAD_HAVE_RWLOCK
$PTHREAD_HAVE_TIMEDLOCK

#endif
EOF

saypass "done"
if [ -f configure.log ]; then rm -f configure.log; fi

